@model IEnumerable<AppUsuarios.Models.Usuario>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@*se pregunta si existe un mensaje de error*@
@if (TempData["Mensaje"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong></strong> @TempData["Mensaje"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<table class="table">
    <thead>
        <tr>
            <!-- Encabezados de las columnas, donde se muestran los nombres de los campos en la tabla -->
            <th>@Html.DisplayNameFor(model => model.IdUsuario)</th>
            <th>@Html.DisplayNameFor(model => model.Nombre)</th>
            <th>@Html.DisplayNameFor(model => model.Email)</th>
            <th>@Html.DisplayNameFor(model => model.Estado)</th>
            <th>@Html.DisplayNameFor(model => model.Restablecer)</th>
            <th>Acciones</th>  <!-- Columna para las acciones (Editar, Detalles, Eliminar) -->
        </tr>
    </thead>
    <tbody id="usuariosTabla">
        @* ✅ La tabla se llenará dinámicamente con Lazy Loading *@
        <!-- Este tbody es el contenedor donde se insertarán dinámicamente los datos de los usuarios -->
    </tbody>
</table>

@section Scripts {
    <script defer>
        let pagina = 1;  // Página inicial
        let cantidadPorPagina = 5;  // Mostramos 5 usuarios por vez
        let usuariosCargados = 0;  // Contador de usuarios cargados

        // Función para cargar los usuarios desde el servidor
        function cargarUsuarios() {
            $.ajax({
                url: "/Usuarios/GetUsuarios",  // Asegúrate de que esta ruta exista en tu controlador
                type: "GET",
                data: { pagina: pagina },  // Enviamos el número de página actual
                success: function (data) {
                    if (data.length > 0) {
                        let tabla = document.getElementById("usuariosTabla");  // Referencia de la tabla
                        // Iteramos sobre los usuarios recibidos y agregamos filas a la tabla
                        data.forEach(usuario => {
                            let fila = `
                                    <tr>
                                        <td>${usuario.idUsuario}</td>  <!-- Muestra el Id del usuario -->
                                        <td>${usuario.nombre}</td>     <!-- Muestra el nombre del usuario -->
                                        <td>${usuario.email}</td>      <!-- Muestra el email del usuario -->
                                        <td>${usuario.estado}</td>     <!-- Muestra el estado del usuario -->
                                        <td>${usuario.restablecer}</td> <!-- Muestra si el usuario tiene la opción de restablecer su cuenta -->
                                        <td>
                                            <!-- Enlaces para editar, ver detalles o eliminar el usuario -->
                                            <a href="/Usuarios/Edit/${usuario.idUsuario}">Edit</a> |
                                            <a href="/Usuarios/Details/${usuario.idUsuario}">Details</a> |
                                            <a href="/Usuarios/Delete/${usuario.idUsuario}">Delete</a>
                                        </td>
                                    </tr>`;
                            tabla.innerHTML += fila;  // Añadimos la fila a la tabla
                        });

                        // Aumentamos la página para la próxima solicitud
                        pagina++;
                        usuariosCargados += data.length;  // Incrementamos el número de usuarios cargados
                    }

                    // Si ya no hay más usuarios, ocultamos el botón
                    if (data.length < cantidadPorPagina) {
                        $("#cargarMas").hide();  // Ocultamos el botón "Cargar más" si no hay más usuarios
                    }
                },
                error: function () {
                    console.log("Error al cargar los usuarios");
                }
            });
        }

        // Cuando el documento se carga completamente, llamamos a la función cargarUsuarios
        document.addEventListener("DOMContentLoaded", function () {
            cargarUsuarios();  // Llamamos a la función al cargar la página inicialmente
        });

        // Configuración del botón "Cargar más"
        $(document).ready(function () {
            $("#cargarMas").click(function () {
                cargarUsuarios();  // Llamamos a la función cuando el usuario haga clic en "Cargar más"
            });
        });
    </script>


    <button id="cargarMas">Cargar más</button>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
}